# Generated by Django 5.2.5 on 2025-08-29 09:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('knowledge_type', models.CharField(choices=[('technique', 'Coping Technique'), ('information', 'Educational Information'), ('resource', 'Resource/Referral'), ('crisis_response', 'Crisis Response'), ('therapy_note', 'Therapy Notes'), ('research', 'Research Finding')], max_length=20)),
                ('topics', models.JSONField(default=list)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=15)),
                ('target_conditions', models.JSONField(default=list)),
                ('source', models.CharField(blank=True, max_length=200)),
                ('author', models.CharField(blank=True, max_length=100)),
                ('is_evidence_based', models.BooleanField(default=True)),
                ('effectiveness_rating', models.FloatField(default=0.0)),
                ('usage_count', models.IntegerField(default=0)),
                ('positive_feedback', models.IntegerField(default=0)),
                ('negative_feedback', models.IntegerField(default=0)),
                ('vector_id', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-effectiveness_rating', '-usage_count'],
                'indexes': [models.Index(fields=['knowledge_type', 'is_active'], name='chat_knowle_knowled_79ad51_idx'), models.Index(fields=['effectiveness_rating'], name='chat_knowle_effecti_90ba62_idx')],
            },
        ),
        migrations.CreateModel(
            name='PersonalizationProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_tone', models.CharField(default='supportive', max_length=20)),
                ('response_length', models.CharField(default='medium', max_length=20)),
                ('crisis_sensitivity', models.CharField(default='high', max_length=20)),
                ('effective_strategies', models.JSONField(default=list)),
                ('trigger_patterns', models.JSONField(default=list)),
                ('mood_patterns', models.JSONField(default=dict)),
                ('interaction_patterns', models.JSONField(default=dict)),
                ('memory_retention_days', models.IntegerField(default=90)),
                ('enable_proactive_suggestions', models.BooleanField(default=True)),
                ('enable_mood_predictions', models.BooleanField(default=True)),
                ('adaptation_score', models.FloatField(default=0.5)),
                ('interaction_count', models.IntegerField(default=0)),
                ('last_pattern_update', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personalization_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMemory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_type', models.CharField(choices=[('preference', 'User Preference'), ('personal_info', 'Personal Information'), ('mood_pattern', 'Mood Pattern'), ('trigger', 'Trigger Information'), ('coping_strategy', 'Effective Coping Strategy'), ('goal', 'Personal Goal'), ('progress', 'Progress Update'), ('session_note', 'Session Note')], max_length=20)),
                ('content', models.TextField()),
                ('context', models.JSONField(default=dict)),
                ('importance', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('access_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('confidence_score', models.FloatField(default=1.0)),
                ('embedding_id', models.CharField(blank=True, max_length=100)),
                ('source_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='chat.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-importance', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MemoryInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retrieval_score', models.FloatField()),
                ('was_helpful', models.BooleanField(blank=True, null=True)),
                ('response_quality', models.FloatField(blank=True, null=True)),
                ('query_text', models.TextField()),
                ('context_type', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.message')),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='chat.usermemory')),
            ],
        ),
        migrations.CreateModel(
            name='VectorMemory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('message', 'Chat Message'), ('document', 'Knowledge Document'), ('resource', 'Mental Health Resource'), ('strategy', 'Coping Strategy'), ('memory', 'User Memory')], max_length=20)),
                ('content_id', models.CharField(max_length=100)),
                ('content_text', models.TextField()),
                ('vector_id', models.CharField(max_length=100, unique=True)),
                ('collection_name', models.CharField(max_length=100)),
                ('tags', models.JSONField(default=list)),
                ('metadata', models.JSONField(default=dict)),
                ('embedding_quality', models.FloatField(default=1.0)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConversationMemory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField()),
                ('key_topics', models.JSONField(default=list)),
                ('emotional_state', models.JSONField(default=dict)),
                ('mentioned_concerns', models.JSONField(default=list)),
                ('suggested_resources', models.JSONField(default=list)),
                ('message_count', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('session_quality', models.CharField(blank=True, max_length=20)),
                ('needs_followup', models.BooleanField(default=False)),
                ('followup_notes', models.TextField(blank=True)),
                ('next_check_in', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_memories', to='chat.chatroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_memories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='chat_conver_user_id_e6394d_idx'), models.Index(fields=['room'], name='chat_conver_room_id_a276a5_idx'), models.Index(fields=['needs_followup'], name='chat_conver_needs_f_a91dc6_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='usermemory',
            index=models.Index(fields=['user', 'memory_type'], name='chat_userme_user_id_58b32b_idx'),
        ),
        migrations.AddIndex(
            model_name='usermemory',
            index=models.Index(fields=['user', 'is_active'], name='chat_userme_user_id_a63c36_idx'),
        ),
        migrations.AddIndex(
            model_name='usermemory',
            index=models.Index(fields=['created_at'], name='chat_userme_created_3d8dbf_idx'),
        ),
        migrations.AddIndex(
            model_name='usermemory',
            index=models.Index(fields=['importance'], name='chat_userme_importa_136168_idx'),
        ),
        migrations.AddIndex(
            model_name='memoryinteraction',
            index=models.Index(fields=['memory', 'created_at'], name='chat_memory_memory__931756_idx'),
        ),
        migrations.AddIndex(
            model_name='vectormemory',
            index=models.Index(fields=['content_type', 'user'], name='chat_vector_content_e62e70_idx'),
        ),
        migrations.AddIndex(
            model_name='vectormemory',
            index=models.Index(fields=['collection_name'], name='chat_vector_collect_a64949_idx'),
        ),
        migrations.AddIndex(
            model_name='vectormemory',
            index=models.Index(fields=['created_at'], name='chat_vector_created_a803ba_idx'),
        ),
    ]
